// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using efproject;

#nullable disable

namespace efproject.Migrations
{
    [DbContext(typeof(TasksContext))]
    [Migration("20240416183121_InitialData")]
    partial class InitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("efproject.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("2f220809-95c8-40fe-8807-e466234cff54"),
                            Name = "Pending activities",
                            Points = 5
                        },
                        new
                        {
                            CategoryId = new Guid("2f220809-95c8-40fe-8807-e466234cff50"),
                            Name = "Personal activities",
                            Points = 8
                        });
                });

            modelBuilder.Entity("efproject.Models.Task", b =>
                {
                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaskPriority")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TaskId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Task", (string)null);

                    b.HasData(
                        new
                        {
                            TaskId = new Guid("2f220809-95c8-40fe-8807-e466234cff30"),
                            CategoryId = new Guid("2f220809-95c8-40fe-8807-e466234cff54"),
                            CreationDate = new DateTime(2024, 4, 16, 13, 31, 20, 913, DateTimeKind.Local).AddTicks(500),
                            DueDate = new DateTime(2024, 4, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            TaskPriority = 1,
                            Title = "Check pending activites"
                        },
                        new
                        {
                            TaskId = new Guid("2f220809-95c8-40fe-8807-e466234cff20"),
                            CategoryId = new Guid("2f220809-95c8-40fe-8807-e466234cff50"),
                            CreationDate = new DateTime(2024, 4, 16, 13, 31, 20, 913, DateTimeKind.Local).AddTicks(540),
                            DueDate = new DateTime(2024, 4, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            TaskPriority = 2,
                            Title = "Check .net courses"
                        });
                });

            modelBuilder.Entity("efproject.Models.Task", b =>
                {
                    b.HasOne("efproject.Models.Category", "Category")
                        .WithMany("Tasks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("efproject.Models.Category", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
